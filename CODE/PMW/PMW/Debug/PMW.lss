
PMW.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000d8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000012c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000012c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000015c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000198  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000016f  00000000  00000000  000001c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000000f6  00000000  00000000  0000032f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000183  00000000  00000000  00000425  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  000005a8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000019f  00000000  00000000  000005dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000066  00000000  00000000  0000077b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  000007e1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:

int main ()
{
	  // Clear OC1A and OC1B on Compare Match / Set OC1A and OC1B at Bottom;
	  // Wave Form Generator: Fast PWM 14, Top = ICR1
	  TCCR1A = (1<<COM1A1) + (1<<COM1B1) + (1<<WGM11);
  6c:	82 ea       	ldi	r24, 0xA2	; 162
  6e:	8f bd       	out	0x2f, r24	; 47
	  TCCR1B = (1<<WGM13) + (1<<WGM12) + (1<<CS10); // prescaler = 1 (none)
  70:	89 e1       	ldi	r24, 0x19	; 25
  72:	8e bd       	out	0x2e, r24	; 46
	  ICR1 = 15999;
  74:	8f e7       	ldi	r24, 0x7F	; 127
  76:	9e e3       	ldi	r25, 0x3E	; 62
  78:	97 bd       	out	0x27, r25	; 39
  7a:	86 bd       	out	0x26, r24	; 38
	  OCR1A = 3999;
  7c:	8f e9       	ldi	r24, 0x9F	; 159
  7e:	9f e0       	ldi	r25, 0x0F	; 15
  80:	9b bd       	out	0x2b, r25	; 43
  82:	8a bd       	out	0x2a, r24	; 42
	  OCR1B = 11999;
  84:	8f ed       	ldi	r24, 0xDF	; 223
  86:	9e e2       	ldi	r25, 0x2E	; 46
  88:	99 bd       	out	0x29, r25	; 41
  8a:	88 bd       	out	0x28, r24	; 40
	  DDRB |= (1<<PB1)|(1<<PB2);
  8c:	87 b3       	in	r24, 0x17	; 23
  8e:	86 60       	ori	r24, 0x06	; 6
  90:	87 bb       	out	0x17, r24	; 23
// 	TCCR1B = (1<<WGM13) | (1<<WGM12) | (1<<CS12) | (1<<CS11) | (1<<CS10);
// 	DDRD |= (1<<PD5);  /*set OC2 pin as output*/
}

int main ()
{
  92:	30 e0       	ldi	r19, 0x00	; 0
  94:	20 e0       	ldi	r18, 0x00	; 0
  96:	5f ef       	ldi	r21, 0xFF	; 255
  98:	40 e0       	ldi	r20, 0x00	; 0
  9a:	83 2f       	mov	r24, r19
  9c:	92 2f       	mov	r25, r18

	while (1)
	{
		for(duty=0; duty<255; duty++)
		{
			OCR1A=duty;  /*increase the LED light intensity*/
  9e:	9b bd       	out	0x2b, r25	; 43
  a0:	8a bd       	out	0x2a, r24	; 42
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a2:	e3 ec       	ldi	r30, 0xC3	; 195
  a4:	f9 e0       	ldi	r31, 0x09	; 9
  a6:	31 97       	sbiw	r30, 0x01	; 1
  a8:	f1 f7       	brne	.-4      	; 0xa6 <main+0x3a>
  aa:	00 c0       	rjmp	.+0      	; 0xac <main+0x40>
  ac:	00 00       	nop
  ae:	01 96       	adiw	r24, 0x01	; 1
	
	PWM_init();

	while (1)
	{
		for(duty=0; duty<255; duty++)
  b0:	8f 3f       	cpi	r24, 0xFF	; 255
  b2:	91 05       	cpc	r25, r1
  b4:	a1 f7       	brne	.-24     	; 0x9e <main+0x32>
  b6:	85 2f       	mov	r24, r21
  b8:	94 2f       	mov	r25, r20
			OCR1A=duty;  /*increase the LED light intensity*/
			_delay_ms(10);
		}
		for(duty=255; duty>1; duty--)
		{
			OCR1A=duty;  /*decrease the LED light intensity*/
  ba:	9b bd       	out	0x2b, r25	; 43
  bc:	8a bd       	out	0x2a, r24	; 42
  be:	e3 ec       	ldi	r30, 0xC3	; 195
  c0:	f9 e0       	ldi	r31, 0x09	; 9
  c2:	31 97       	sbiw	r30, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <main+0x56>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <main+0x5c>
  c8:	00 00       	nop
  ca:	01 97       	sbiw	r24, 0x01	; 1
		for(duty=0; duty<255; duty++)
		{
			OCR1A=duty;  /*increase the LED light intensity*/
			_delay_ms(10);
		}
		for(duty=255; duty>1; duty--)
  cc:	81 30       	cpi	r24, 0x01	; 1
  ce:	91 05       	cpc	r25, r1
  d0:	a1 f7       	brne	.-24     	; 0xba <main+0x4e>
  d2:	e3 cf       	rjmp	.-58     	; 0x9a <main+0x2e>

000000d4 <_exit>:
  d4:	f8 94       	cli

000000d6 <__stop_program>:
  d6:	ff cf       	rjmp	.-2      	; 0xd6 <__stop_program>
